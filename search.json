[{"path":"https://eso28599.github.io/resnmtf/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 resnmtf authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://eso28599.github.io/resnmtf/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ella Orme. Author, maintainer.","code":""},{"path":"https://eso28599.github.io/resnmtf/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Orme E (2025). resnmtf: Determining multi-view biclustering via ResNMTF. R package version 0.0.1.0, https://eso28599.github.io/resnmtf/.","code":"@Manual{,   title = {resnmtf: Determining a multi-view biclustering via ResNMTF},   author = {Ella Orme},   year = {2025},   note = {R package version 0.0.1.0},   url = {https://eso28599.github.io/resnmtf/}, }"},{"path":"https://eso28599.github.io/resnmtf/index.html","id":"resnmtf","dir":"","previous_headings":"","what":"Determining a multi-view biclustering via ResNMTF","title":"Determining a multi-view biclustering via ResNMTF","text":"Welcome landing page resnmtf package implementing Restrictive Non-Negative Matrix Tri-Factorisation (ResNMTF) paper “Multi-view biclustering via non-negative matrix tri-factorisation”. ResNMTF flexible method allows combination shared rows /columns views. example, view 1 2 share columns views 1, 3 4 share rows, following figure, can incorporated.","code":""},{"path":"https://eso28599.github.io/resnmtf/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Determining a multi-view biclustering via ResNMTF","text":"can install R package using following line code:","code":"devtools::install_github(\"eso28599/resnmtf\") # requires devtools package to be installed"},{"path":"https://eso28599.github.io/resnmtf/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Determining a multi-view biclustering via ResNMTF","text":"demonstrate use resnmtf generate toy data 2 views 3 biclusters, assuming biclusters share rows across views, share columns. View 1 dimensions 100×50100 \\times 50 view 2, 100×30100 \\times 30.","code":"row_clusters <- cbind(   rbinom(100, 1, 0.5),   rbinom(100, 1, 0.5),   rbinom(100, 1, 0.5) ) col_clusters_v1 <- cbind(   rbinom(50, 1, 0.4),   rbinom(50, 1, 0.4),   rbinom(50, 1, 0.4) ) col_clusters_v2 <- cbind(   rbinom(30, 1, 0.4),   rbinom(30, 1, 0.4),   rbinom(30, 1, 0.4) ) data <- list(   row_clusters %*% diag(c(5, 5, 5)) %*% t(col_clusters_v2) +     abs(matrix(rnorm(100 * 50), 100, 50)),   row_clusters %*% diag(c(5, 5, 5)) %*% t(col_clusters_v2) +     abs(0.01 * matrix(rnorm(100 * 30), 100, 30)) )"},{"path":"https://eso28599.github.io/resnmtf/index.html","id":"application","dir":"","previous_headings":"Usage","what":"Application","title":"Determining a multi-view biclustering via ResNMTF","text":"apply_resnmtf function used obtain biclusters. takes input multi-view data form list .e. data X={X(1),…,X(nv)}X =\\{X^{(1)}, \\dots,X^{(n_v)}\\} inputted list list(x_1, x_2, \\dots, x_n_v). desired restrictions imposed via restriction matrices phi, psi xi enforce shared row clusters, column clusters row-column matching respectively. number biclusters present view known, can supplied via k_vec: instead like change range biclusters considered initially (3≤k≤83\\leq k \\leq 8 default), can implented via k_min k_max inputs: Notes: non-zero xi restriction matrix also enforces assumption scale biclusters equal across views. number biclusters need specified, determined bisilhouette score.","code":"phi <- matrix(0, 2, 2) phi[1, 2] <- 1 # regularises towards shared rows between view 1 and view 2 phi_val <- 200 # hyperparameter chosen to enforce regularisation results <- apply_resnmtf(data, phi = phi_val * phi) results <- apply_resnmtf(data, k_vec = rep(3, 2), phi = phi_val * phi) results <- apply_resnmtf(data, k_min = 4, k_max = 10, phi = phi_val * phi)"},{"path":"https://eso28599.github.io/resnmtf/index.html","id":"results","dir":"","previous_headings":"Usage","what":"Results","title":"Determining a multi-view biclustering via ResNMTF","text":"multi-view biclustering contained within two lists defining row column clusters associated biclusters. specific view, represented via binary logic matrices, (,j)th(,j)^{th} element equal 11 row/column ii belongs bicluster jj, 00 otherwise. .e. given example, results$row_clusters list length 2, first element binary matrix size 100×k100 \\times k kk number biclusters found.","code":"results$row_clusters results$col_clusters"},{"path":"https://eso28599.github.io/resnmtf/index.html","id":"single-view-data","dir":"","previous_headings":"Usage","what":"Single-view data","title":"Determining a multi-view biclustering via ResNMTF","text":"method can also applied single-view data, inputted either list containing matrix single-view: matrix:","code":"data <- list(   row_clusters %*% diag(c(5, 5, 5)) %*% t(col_clusters_v2) +     abs(matrix(rnorm(100 * 50), 100, 50))     ) results <- apply_resnmtf(data) data <- row_clusters %*% diag(c(5, 5, 5)) %*% t(col_clusters_v2) +           abs(matrix(rnorm(100 * 50), 100, 50)) results <- apply_resnmtf(data)"},{"path":"https://eso28599.github.io/resnmtf/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Determining a multi-view biclustering via ResNMTF","text":"use model work, please cite us : Orme, E.S.C., Rodosthenous, T. Evangelou, M., 2025. Multi-view biclustering via non-negative matrix tri-factorisation. arXiv preprint arXiv:2502.13698. following bibtex entry:","code":"@misc{resnmtf,       title={Multi-view biclustering via non-negative matrix tri-factorisation},       author={Ella S. C. Orme and Theodoulos Rodosthenous and Marina Evangelou},       year={2025},       eprint={2502.13698},       archivePrefix={arXiv},       primaryClass={stat.ME},       url={https://arxiv.org/abs/2502.13698}, }"},{"path":"https://eso28599.github.io/resnmtf/reference/apply_resnmtf.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply ResNMTF — apply_resnmtf","title":"Apply ResNMTF — apply_resnmtf","text":"Apply ResNMTF data range biclusters selecting optimal number, optional stability analysis","code":""},{"path":"https://eso28599.github.io/resnmtf/reference/apply_resnmtf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply ResNMTF — apply_resnmtf","text":"","code":"apply_resnmtf(   data,   init_f = NULL,   init_s = NULL,   init_g = NULL,   k_vec = NULL,   phi = NULL,   xi = NULL,   psi = NULL,   n_iters = NULL,   k_min = 3,   k_max = 8,   distance = \"euclidean\",   num_repeats = 5,   no_clusts = FALSE,   sample_rate = 0.9,   n_stability = 5,   stability = TRUE,   stab_thres = 0.4,   remove_unstable = TRUE,   use_parallel = TRUE )"},{"path":"https://eso28599.github.io/resnmtf/reference/apply_resnmtf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply ResNMTF — apply_resnmtf","text":"data list n_v matrices, data factorised. one view supplied, can given matrix. init_f list matrices, initialisation F matrices init_s list matrices, initialisation S matrices init_g list matrices, initialisation G matrices k_vec vector integers, number clusters consider view, default NULL phi n_v x n_v matrix, default NULL, restriction matrices F xi n_v x n_v matrix, default NULL, restriction matrices S psi n_v x n_v matrix, default NULL, restriction matrices G n_iters integer, default NULL, number iterations run , otherwise run convergence k_min positive integer, default 3, smallest value k considered initially, k_max positive integer, default 6, largest value k considered initially, distance string, default \"euclidean\", distance metric use within bisilhouette score num_repeats integer, default 5, number repeats use within stability analysis no_clusts boolean, default FALSE, whether return factorisation , sample_rate numeric, default 0.9, proportion data sample stability analysis, n_stability integer, default 5, number times repeat stability analysis, stability boolean, default TRUE, whether perform stability analysis , stab_thres numeric, default 0.4, threshold stability analysis, remove_unstable boolean, default TRUE, whether remove unstable clusters use_parallel boolean, default TRUE, wheather use parallelisation, applicable Windows linux machines","code":""},{"path":"https://eso28599.github.io/resnmtf/reference/apply_resnmtf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply ResNMTF — apply_resnmtf","text":"list results ResNMTF, containing following: - output_f: list matrices, F matrices - output_s: list matrices, S matrices - output_g: list matrices, G matrices - Error: numeric, mean error - All_Error: numeric, errors - bisil: numeric, bisilhouette score - row_clusters: list matrices, row clusters - col_clusters: list matrices, column clusters - lambda: list vectors, lambda vectors - mu: list vectors, mu vectors","code":""},{"path":"https://eso28599.github.io/resnmtf/reference/apply_resnmtf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply ResNMTF — apply_resnmtf","text":"","code":"row_clusters <- cbind(   rbinom(100, 1, 0.5),   rbinom(100, 1, 0.5),   rbinom(100, 1, 0.5) ) col_clusters <- cbind(   rbinom(50, 1, 0.4),   rbinom(50, 1, 0.4),   rbinom(50, 1, 0.4) ) n_col <- 50 data <- list(   row_clusters %*% diag(c(5, 5, 5)) %*% t(col_clusters) +     abs(matrix(rnorm(100 * n_col), 100, n_col)),   row_clusters %*% diag(c(5, 5, 5)) %*% t(col_clusters) +     abs(0.01 * matrix(rnorm(100 * n_col), 100, n_col)) ) apply_resnmtf(data, k_max = 4) #> $output_f #> $output_f[[1]] #>                [,1]         [,2]         [,3] #>   [1,] 1.146132e-03 2.125154e-02 3.446478e-03 #>   [2,] 1.494577e-03 1.471902e-03 8.276863e-03 #>   [3,] 1.086306e-03 1.975034e-03 8.162363e-03 #>   [4,] 1.549786e-02 1.193909e-06 1.731855e-02 #>   [5,] 1.697182e-02 1.344827e-03 2.599818e-03 #>   [6,] 1.693614e-02 3.461655e-09 6.520452e-03 #>   [7,] 1.545141e-02 2.175745e-02 3.248935e-03 #>   [8,] 1.579234e-02 2.046717e-02 1.016246e-02 #>   [9,] 1.759394e-02 2.027217e-02 1.261481e-03 #>  [10,] 1.513659e-02 8.629255e-04 1.607522e-02 #>  [11,] 5.686309e-12 2.296943e-08 1.479918e-02 #>  [12,] 1.559248e-02 8.888988e-04 1.363640e-02 #>  [13,] 1.700079e-02 1.606283e-16 6.139761e-03 #>  [14,] 1.613030e-02 5.817570e-04 1.521746e-02 #>  [15,] 9.007516e-04 1.838288e-04 1.718925e-02 #>  [16,] 1.639320e-02 2.375322e-03 1.261524e-02 #>  [17,] 1.576605e-02 4.907717e-06 1.489967e-02 #>  [18,] 1.600299e-02 2.172142e-02 8.368387e-03 #>  [19,] 1.748153e-02 2.449653e-10 2.767804e-03 #>  [20,] 1.643250e-02 1.963616e-02 1.687285e-18 #>  [21,] 1.602135e-03 2.162133e-02 2.475514e-03 #>  [22,] 1.565229e-02 2.169079e-04 1.555762e-02 #>  [23,] 1.545871e-02 1.978517e-02 1.272948e-02 #>  [24,] 9.739603e-04 2.219722e-02 1.097805e-02 #>  [25,] 7.708661e-04 1.478171e-03 9.057889e-03 #>  [26,] 1.572254e-02 2.060945e-02 1.184627e-02 #>  [27,] 9.352980e-04 2.225354e-02 1.554074e-02 #>  [28,] 1.799697e-04 2.333593e-02 1.406781e-02 #>  [29,] 5.564293e-06 3.124796e-03 1.579150e-02 #>  [30,] 1.671935e-02 2.291924e-05 4.652841e-03 #>  [31,] 1.592342e-02 2.559325e-04 1.360350e-02 #>  [32,] 1.679603e-02 2.169928e-02 1.033253e-08 #>  [33,] 1.684626e-02 3.802913e-14 6.030135e-03 #>  [34,] 1.647155e-02 1.427568e-07 1.392716e-02 #>  [35,] 1.582404e-02 2.039867e-02 8.988098e-03 #>  [36,] 1.247090e-03 2.134164e-02 5.787113e-03 #>  [37,] 2.646271e-04 4.843412e-04 1.979785e-02 #>  [38,] 1.643928e-02 9.804374e-04 1.552711e-02 #>  [39,] 1.114498e-03 2.103670e-02 1.592078e-02 #>  [40,] 1.671633e-02 4.072043e-06 7.665812e-03 #>  [41,] 1.516298e-02 2.392420e-02 7.802638e-03 #>  [42,] 7.562537e-04 2.143550e-02 3.290563e-03 #>  [43,] 1.570789e-02 5.433597e-04 1.354075e-02 #>  [44,] 1.385210e-06 2.177213e-02 1.527620e-02 #>  [45,] 1.685974e-02 2.200569e-02 1.001392e-02 #>  [46,] 9.883709e-04 2.241310e-02 1.579524e-02 #>  [47,] 1.587662e-02 2.141681e-02 1.178243e-02 #>  [48,] 1.705574e-02 1.820153e-08 3.786976e-03 #>  [49,] 1.534640e-02 2.834214e-06 1.491934e-02 #>  [50,] 2.158754e-03 1.787409e-03 6.731478e-03 #>  [51,] 1.600238e-02 3.171178e-06 1.642579e-02 #>  [52,] 7.370847e-04 2.230633e-02 1.180442e-02 #>  [53,] 1.918338e-03 6.253288e-05 6.179562e-03 #>  [54,] 5.691817e-04 2.190720e-02 1.480326e-02 #>  [55,] 1.655629e-02 4.321510e-11 5.259762e-03 #>  [56,] 1.156767e-03 2.190487e-02 3.152891e-03 #>  [57,] 1.397481e-03 5.443193e-04 1.824334e-02 #>  [58,] 1.728790e-02 7.906696e-10 3.574575e-03 #>  [59,] 1.704954e-02 2.055244e-02 2.166876e-03 #>  [60,] 1.694397e-02 1.318672e-04 1.765099e-02 #>  [61,] 1.564871e-02 2.040157e-02 1.166557e-02 #>  [62,] 1.628923e-02 1.939123e-04 1.765287e-02 #>  [63,] 1.564407e-02 2.064973e-02 1.164028e-02 #>  [64,] 1.561675e-02 4.624695e-04 1.601846e-02 #>  [65,] 1.644149e-02 2.188809e-02 1.334037e-03 #>  [66,] 1.027672e-03 2.356273e-02 3.226703e-03 #>  [67,] 1.191844e-03 2.219856e-02 5.031804e-03 #>  [68,] 1.637515e-02 3.230965e-04 1.235099e-02 #>  [69,] 1.505852e-02 8.312565e-06 1.815438e-02 #>  [70,] 4.626371e-06 3.573782e-03 1.481798e-02 #>  [71,] 1.354800e-03 1.282430e-04 1.032759e-02 #>  [72,] 1.636543e-02 9.352979e-04 1.333794e-02 #>  [73,] 6.886749e-04 7.482930e-04 8.669670e-03 #>  [74,] 1.551049e-02 1.335090e-04 1.599369e-02 #>  [75,] 1.627750e-02 1.371450e-03 1.505771e-02 #>  [76,] 1.317933e-03 2.158456e-02 3.434449e-03 #>  [77,] 3.436442e-05 2.141154e-02 1.559901e-02 #>  [78,] 1.619947e-02 7.954179e-04 1.383430e-02 #>  [79,] 1.694377e-02 1.997524e-02 2.331243e-03 #>  [80,] 1.271546e-05 2.375112e-02 1.271376e-02 #>  [81,] 1.725725e-02 2.443872e-06 3.433459e-03 #>  [82,] 9.936427e-04 1.225778e-03 6.649061e-03 #>  [83,] 1.672299e-02 1.844714e-07 1.576147e-02 #>  [84,] 9.928089e-04 2.157956e-02 5.630948e-03 #>  [85,] 1.112770e-03 1.452445e-03 1.849904e-02 #>  [86,] 7.482358e-04 1.840823e-04 1.873646e-02 #>  [87,] 1.582706e-02 2.055708e-02 1.246482e-02 #>  [88,] 1.289086e-03 1.059155e-03 1.419822e-02 #>  [89,] 1.636957e-02 2.148396e-02 1.077442e-02 #>  [90,] 1.788996e-03 1.743248e-09 1.048216e-02 #>  [91,] 2.108219e-03 2.054576e-02 4.538100e-03 #>  [92,] 1.663366e-02 2.055472e-02 1.029204e-07 #>  [93,] 1.672303e-02 1.951328e-02 1.256936e-02 #>  [94,] 1.479148e-03 3.910966e-04 8.672237e-03 #>  [95,] 1.774034e-02 2.064779e-02 1.711468e-04 #>  [96,] 1.606041e-02 2.231411e-02 4.530070e-12 #>  [97,] 2.581646e-04 2.505321e-03 1.413485e-02 #>  [98,] 1.691027e-02 4.591886e-06 3.587380e-03 #>  [99,] 1.846260e-05 2.358267e-02 1.165122e-02 #> [100,] 1.695811e-02 1.994208e-02 1.115542e-06 #>  #> $output_f[[2]] #>                [,1]         [,2]         [,3] #>   [1,] 1.066382e-11 2.152188e-02 5.719293e-03 #>   [2,] 3.896436e-32 5.406195e-50 7.256978e-03 #>   [3,] 6.467403e-26 3.266737e-44 9.219032e-03 #>   [4,] 1.689855e-02 4.647960e-04 1.302188e-02 #>   [5,] 1.621653e-02 2.927229e-20 6.685743e-03 #>   [6,] 1.708249e-02 7.246450e-15 2.975970e-03 #>   [7,] 1.687921e-02 2.165335e-02 6.738200e-04 #>   [8,] 1.706953e-02 2.249995e-02 1.078814e-02 #>   [9,] 1.686100e-02 2.182643e-02 3.329060e-10 #>  [10,] 1.680070e-02 1.095467e-09 1.780509e-02 #>  [11,] 3.082576e-28 8.765831e-33 9.140822e-03 #>  [12,] 1.667228e-02 6.946291e-07 1.557025e-02 #>  [13,] 1.705111e-02 1.499403e-17 2.578254e-03 #>  [14,] 1.688824e-02 3.087461e-06 1.543597e-02 #>  [15,] 1.419428e-06 2.520073e-04 1.684285e-02 #>  [16,] 1.693689e-02 1.991346e-05 1.478100e-02 #>  [17,] 1.708421e-02 6.770241e-05 1.309190e-02 #>  [18,] 1.714985e-02 2.251825e-02 1.238486e-02 #>  [19,] 1.686461e-02 5.735703e-16 1.871804e-03 #>  [20,] 1.689353e-02 2.170049e-02 1.827692e-03 #>  [21,] 4.125243e-10 2.136819e-02 6.365035e-03 #>  [22,] 1.717345e-02 5.185808e-05 1.301561e-02 #>  [23,] 1.724796e-02 2.252118e-02 1.042137e-02 #>  [24,] 6.883410e-10 2.191481e-02 1.605081e-02 #>  [25,] 1.403918e-26 1.041892e-46 9.434441e-03 #>  [26,] 1.739861e-02 2.272586e-02 1.083761e-02 #>  [27,] 1.244035e-04 2.253468e-02 1.386825e-02 #>  [28,] 1.314239e-04 2.252017e-02 1.182241e-02 #>  [29,] 2.149552e-13 5.707512e-10 2.076117e-02 #>  [30,] 1.651511e-02 1.759375e-17 2.828694e-03 #>  [31,] 1.666693e-02 2.025264e-08 1.679992e-02 #>  [32,] 1.660824e-02 2.218381e-02 1.517561e-03 #>  [33,] 1.662875e-02 4.554685e-18 4.381565e-03 #>  [34,] 1.712051e-02 9.349792e-05 1.233346e-02 #>  [35,] 1.666861e-02 2.264805e-02 1.246413e-02 #>  [36,] 2.030739e-04 2.191824e-02 2.050912e-03 #>  [37,] 1.226013e-07 2.609510e-04 1.500205e-02 #>  [38,] 1.696424e-02 1.754729e-08 1.570056e-02 #>  [39,] 3.324162e-05 2.206778e-02 1.718405e-02 #>  [40,] 1.694763e-02 1.120731e-19 2.707949e-03 #>  [41,] 1.720126e-02 2.253840e-02 1.055948e-02 #>  [42,] 1.882622e-07 2.167748e-02 2.746417e-03 #>  [43,] 1.719116e-02 2.227907e-08 1.467926e-02 #>  [44,] 3.216764e-05 2.251221e-02 1.306497e-02 #>  [45,] 1.698623e-02 2.257283e-02 1.279673e-02 #>  [46,] 1.036281e-05 2.225538e-02 1.768942e-02 #>  [47,] 1.695928e-02 2.292975e-02 1.050338e-02 #>  [48,] 1.673959e-02 1.027779e-14 2.787490e-03 #>  [49,] 1.714845e-02 1.737990e-05 1.314922e-02 #>  [50,] 2.051741e-31 1.845291e-47 1.132996e-02 #>  [51,] 1.702241e-02 5.272824e-06 1.583915e-02 #>  [52,] 8.111566e-08 2.240939e-02 1.483460e-02 #>  [53,] 5.582734e-26 5.319365e-44 8.328600e-03 #>  [54,] 4.353283e-06 2.192807e-02 1.772499e-02 #>  [55,] 1.682805e-02 2.214541e-21 6.973514e-03 #>  [56,] 1.593701e-05 2.167142e-02 3.937639e-03 #>  [57,] 1.058589e-11 8.960428e-06 1.847774e-02 #>  [58,] 1.693186e-02 3.343237e-18 3.946319e-03 #>  [59,] 1.684225e-02 2.164573e-02 1.573714e-03 #>  [60,] 1.705507e-02 5.196685e-05 1.511247e-02 #>  [61,] 1.690208e-02 2.275078e-02 1.049189e-02 #>  [62,] 1.723174e-02 4.287321e-04 1.200355e-02 #>  [63,] 1.709380e-02 2.261027e-02 1.028308e-02 #>  [64,] 1.715402e-02 2.380239e-04 1.304869e-02 #>  [65,] 1.690400e-02 2.194519e-02 3.404324e-09 #>  [66,] 1.310916e-11 2.187918e-02 3.236713e-03 #>  [67,] 8.230819e-07 2.179137e-02 2.301576e-03 #>  [68,] 1.703748e-02 2.720310e-05 1.323379e-02 #>  [69,] 1.689591e-02 2.685035e-09 1.817939e-02 #>  [70,] 1.950545e-07 3.708162e-04 1.846444e-02 #>  [71,] 3.542517e-24 3.068769e-44 7.030013e-03 #>  [72,] 1.675707e-02 7.555313e-09 1.709217e-02 #>  [73,] 2.094764e-19 1.183969e-40 8.212152e-03 #>  [74,] 1.710309e-02 5.813144e-06 1.580752e-02 #>  [75,] 1.652180e-02 6.792385e-05 1.555447e-02 #>  [76,] 1.769286e-08 2.161001e-02 2.688399e-03 #>  [77,] 4.958370e-06 2.238136e-02 1.607248e-02 #>  [78,] 1.721007e-02 7.345880e-05 1.410898e-02 #>  [79,] 1.706351e-02 2.225526e-02 4.109163e-05 #>  [80,] 1.152049e-04 2.244686e-02 1.435252e-02 #>  [81,] 1.680966e-02 3.640237e-17 6.071543e-03 #>  [82,] 3.217921e-38 1.217219e-38 6.501348e-03 #>  [83,] 1.666270e-02 5.167578e-08 1.551709e-02 #>  [84,] 1.016220e-08 2.182928e-02 3.162712e-03 #>  [85,] 8.562023e-13 1.652219e-07 1.987658e-02 #>  [86,] 1.405846e-09 5.989132e-09 2.056915e-02 #>  [87,] 1.687890e-02 2.261199e-02 1.130417e-02 #>  [88,] 8.470170e-08 1.100343e-07 1.820613e-02 #>  [89,] 1.725392e-02 2.273330e-02 1.121514e-02 #>  [90,] 5.134125e-20 2.297553e-42 5.860519e-03 #>  [91,] 3.384580e-12 2.169930e-02 5.089846e-03 #>  [92,] 1.656698e-02 2.191973e-02 2.150411e-08 #>  [93,] 1.705505e-02 2.274331e-02 9.976933e-03 #>  [94,] 8.143140e-34 3.545823e-49 6.660134e-03 #>  [95,] 1.700288e-02 2.202980e-02 1.681733e-03 #>  [96,] 1.716199e-02 2.177709e-02 7.287497e-04 #>  [97,] 9.517547e-15 3.670752e-11 1.991467e-02 #>  [98,] 1.687399e-02 2.057507e-16 1.848640e-03 #>  [99,] 1.544589e-06 2.252150e-02 1.433799e-02 #> [100,] 1.698536e-02 2.169016e-02 7.182639e-11 #>  #>  #> $output_s #> $output_s[[1]] #>            [,1]       [,2]       [,3] #> [1,] 18.3692874  0.9744228  0.2634945 #> [2,]  0.2210613 12.2584154  1.4868896 #> [3,]  1.3404007  0.1047910 14.9253031 #>  #> $output_s[[2]] #>             [,1]        [,2]        [,3] #> [1,] 19.61147532  0.03951771  0.07682065 #> [2,]  0.02495431 13.74997853  0.74173834 #> [3,]  0.16063438  0.01172958 15.59362578 #>  #>  #> $output_g #> $output_g[[1]] #>               [,1]         [,2]         [,3] #>  [1,] 0.0022882489 2.077359e-05 6.154092e-02 #>  [2,] 0.0013493536 6.730806e-02 3.164189e-03 #>  [3,] 0.0113529086 1.930352e-04 4.140648e-02 #>  [4,] 0.0465225643 3.096814e-05 4.620099e-03 #>  [5,] 0.0116535229 1.057356e-02 3.336954e-02 #>  [6,] 0.0158950220 1.545848e-02 2.426684e-02 #>  [7,] 0.0286522265 3.272271e-02 6.982948e-06 #>  [8,] 0.0473833794 1.436942e-03 2.086642e-03 #>  [9,] 0.0001148794 6.864377e-02 3.907257e-03 #> [10,] 0.0006378225 3.242000e-02 3.601419e-02 #> [11,] 0.0121715454 7.651471e-03 3.386739e-02 #> [12,] 0.0285325226 3.335062e-02 1.615700e-05 #> [13,] 0.0088272185 1.275963e-02 3.597349e-02 #> [14,] 0.0122828597 3.480704e-03 4.030611e-02 #> [15,] 0.0292062156 3.196525e-02 2.235244e-05 #> [16,] 0.0474869894 5.462109e-04 2.776500e-03 #> [17,] 0.0195672620 2.118975e-02 2.192409e-02 #> [18,] 0.0273141199 4.746277e-05 3.023805e-02 #> [19,] 0.0483854831 2.112148e-03 1.478273e-04 #> [20,] 0.0012054735 6.510828e-02 5.840777e-03 #> [21,] 0.0006080423 6.748355e-02 4.663615e-03 #> [22,] 0.0284261569 3.304626e-02 3.327578e-06 #> [23,] 0.0271738232 1.588802e-04 3.012462e-02 #> [24,] 0.0088374445 5.398816e-03 4.264271e-02 #> [25,] 0.0291089314 3.212808e-02 1.140103e-05 #> [26,] 0.0021452218 3.270071e-02 3.415385e-02 #> [27,] 0.0284494146 2.563818e-05 2.864881e-02 #> [28,] 0.0001490632 6.540920e-02 6.658558e-03 #> [29,] 0.0492614289 2.426334e-04 2.008813e-04 #> [30,] 0.0490942955 2.073489e-03 3.332922e-07 #> [31,] 0.0022965605 2.232243e-06 6.223409e-02 #> [32,] 0.0013795854 3.209749e-02 3.560756e-02 #> [33,] 0.0009220423 3.286387e-02 3.521620e-02 #> [34,] 0.0270661088 6.597188e-05 3.087408e-02 #> [35,] 0.0136870093 7.621683e-03 3.089579e-02 #> [36,] 0.0200872622 2.156314e-02 2.107118e-02 #> [37,] 0.0193910154 2.112095e-02 2.188921e-02 #> [38,] 0.0012642287 3.276007e-02 3.487705e-02 #> [39,] 0.0074461051 1.600413e-02 3.456533e-02 #> [40,] 0.0201710767 7.896303e-03 2.481991e-02 #> [41,] 0.0494115516 2.292046e-04 1.784515e-04 #> [42,] 0.0505358961 7.508739e-06 3.525672e-06 #> [43,] 0.0280416453 3.285114e-02 1.446137e-04 #> [44,] 0.0131057577 1.170599e-02 3.285133e-02 #> [45,] 0.0286333193 3.148950e-02 5.277385e-04 #> [46,] 0.0274035057 4.162717e-05 3.026893e-02 #> [47,] 0.0292984457 3.130555e-02 1.592975e-04 #> [48,] 0.0061431165 9.267888e-03 4.011768e-02 #> [49,] 0.0011148914 3.358288e-02 3.486569e-02 #> [50,] 0.0285174361 3.183577e-02 2.283587e-04 #>  #> $output_g[[2]] #>               [,1]         [,2]         [,3] #>  [1,] 4.192051e-03 9.760293e-07 6.340938e-02 #>  [2,] 2.345606e-05 7.263476e-02 1.391442e-05 #>  [3,] 6.259943e-04 8.602734e-03 4.743689e-02 #>  [4,] 5.070331e-02 3.030264e-08 1.317108e-07 #>  [5,] 9.217903e-03 6.600997e-03 4.041727e-02 #>  [6,] 8.777465e-03 6.673164e-03 3.712560e-02 #>  [7,] 2.865568e-02 3.137777e-02 1.999587e-05 #>  [8,] 5.069428e-02 3.192858e-08 1.393313e-07 #>  [9,] 2.832129e-05 7.258104e-02 1.690126e-05 #> [10,] 2.321181e-03 3.235929e-02 3.496162e-02 #> [11,] 1.471548e-02 1.208792e-02 2.682041e-02 #> [12,] 2.864796e-02 3.138500e-02 2.002157e-05 #> [13,] 5.430808e-03 1.428517e-02 3.706767e-02 #> [14,] 1.057582e-02 1.134165e-02 3.207035e-02 #> [15,] 2.865148e-02 3.138610e-02 1.966693e-05 #> [16,] 5.069171e-02 3.298182e-08 1.509070e-07 #> [17,] 2.022583e-02 2.036737e-02 2.191810e-02 #> [18,] 2.818274e-02 8.709082e-06 3.059106e-02 #> [19,] 5.069627e-02 3.393538e-08 1.401348e-07 #> [20,] 2.509783e-05 7.264579e-02 1.312255e-05 #> [21,] 2.900190e-05 7.259437e-02 1.532232e-05 #> [22,] 2.864841e-02 3.138855e-02 1.994187e-05 #> [23,] 2.817093e-02 8.995646e-06 3.059710e-02 #> [24,] 9.736137e-03 6.500607e-03 3.869169e-02 #> [25,] 2.865659e-02 3.137576e-02 2.038754e-05 #> [26,] 2.317995e-03 3.234248e-02 3.498332e-02 #> [27,] 2.817068e-02 8.765784e-06 3.060049e-02 #> [28,] 2.697480e-05 7.261558e-02 1.401716e-05 #> [29,] 5.068987e-02 3.516491e-08 1.475041e-07 #> [30,] 5.069917e-02 3.341827e-08 1.420113e-07 #> [31,] 4.188054e-03 8.803024e-07 6.342487e-02 #> [32,] 2.304903e-03 3.235741e-02 3.498855e-02 #> [33,] 2.309782e-03 3.235088e-02 3.498492e-02 #> [34,] 2.817259e-02 8.620134e-06 3.059541e-02 #> [35,] 1.215551e-02 3.166535e-03 3.646578e-02 #> [36,] 2.023572e-02 2.037680e-02 2.189578e-02 #> [37,] 2.023089e-02 2.037066e-02 2.190876e-02 #> [38,] 2.307022e-03 3.235556e-02 3.498332e-02 #> [39,] 1.159246e-02 1.144904e-02 3.368562e-02 #> [40,] 1.254191e-02 6.830605e-03 3.615353e-02 #> [41,] 5.069691e-02 3.346738e-08 1.354883e-07 #> [42,] 5.069430e-02 3.873446e-08 1.404800e-07 #> [43,] 2.864699e-02 3.137972e-02 2.075281e-05 #> [44,] 7.738229e-03 3.301371e-03 4.285935e-02 #> [45,] 2.865750e-02 3.137654e-02 1.941887e-05 #> [46,] 2.816812e-02 9.007440e-06 3.059999e-02 #> [47,] 2.864856e-02 3.138919e-02 2.003699e-05 #> [48,] 9.515409e-03 8.394347e-03 3.551017e-02 #> [49,] 2.314473e-03 3.233128e-02 3.499760e-02 #> [50,] 2.865211e-02 3.137774e-02 2.074029e-05 #>  #>  #> $Error #> [1] 0.1091528 #>  #> $All_Error #>   [1] 0.2562982 0.2446796 0.2392952 0.2383506 0.2375588 0.2361998 0.2335120 #>   [8] 0.2286205 0.2225245 0.2170010 0.2123091 0.2081617 0.2042605 0.2004325 #>  [15] 0.1966182 0.1928139 0.1890153 0.1852003 0.1813527 0.1774878 0.1736503 #>  [22] 0.1698906 0.1662405 0.1627087 0.1592952 0.1560110 0.1528875 0.1499672 #>  [29] 0.1472833 0.1448434 0.1426262 0.1405914 0.1386926 0.1368879 0.1351461 #>  [36] 0.1334477 0.1317844 0.1301568 0.1285728 0.1270445 0.1255859 0.1242108 #>  [43] 0.1229306 0.1217534 0.1206828 0.1197182 0.1188553 0.1180872 0.1174050 #>  [50] 0.1167994 0.1162607 0.1157800 0.1153492 0.1149614 0.1146106 0.1142919 #>  [57] 0.1140009 0.1137345 0.1134896 0.1132638 0.1130552 0.1128619 0.1126824 #>  [64] 0.1125154 0.1123597 0.1122143 0.1120783 0.1119509 0.1118313 0.1117189 #>  [71] 0.1116132 0.1115136 0.1114197 0.1113311 0.1112474 0.1111683 0.1110934 #>  [78] 0.1110225 0.1109554 0.1108917 0.1108313 0.1107740 0.1107196 0.1106678 #>  [85] 0.1106185 0.1105717 0.1105270 0.1104844 0.1104437 0.1104048 0.1103677 #>  [92] 0.1103321 0.1102981 0.1102655 0.1102342 0.1102041 0.1101753 0.1101475 #>  [99] 0.1101208 0.1100950 0.1100702 0.1100462 0.1100230 0.1100005 0.1099787 #> [106] 0.1099575 0.1099369 0.1099168 0.1098972 0.1098780 0.1098593 0.1098409 #> [113] 0.1098230 0.1098054 0.1097881 0.1097713 0.1097548 0.1097388 0.1097231 #> [120] 0.1097079 0.1096931 0.1096787 0.1096648 0.1096513 0.1096383 0.1096257 #> [127] 0.1096135 0.1096018 0.1095904 0.1095794 0.1095688 0.1095585 0.1095485 #> [134] 0.1095388 0.1095294 0.1095202 0.1095113 0.1095025 0.1094940 0.1094857 #> [141] 0.1094776 0.1094696 0.1094618 0.1094541 0.1094466 0.1094393 0.1094322 #> [148] 0.1094253 0.1094185 0.1094120 0.1094056 0.1093995 0.1093936 0.1093878 #> [155] 0.1093822 0.1093768 0.1093716 0.1093665 0.1093615 0.1093567 0.1093519 #> [162] 0.1093473 0.1093428 0.1093384 0.1093341 0.1093299 0.1093257 0.1093216 #> [169] 0.1093175 0.1093135 0.1093095 0.1093056 0.1093017 0.1092979 0.1092941 #> [176] 0.1092903 0.1092865 0.1092828 0.1092790 0.1092753 0.1092716 0.1092679 #> [183] 0.1092642 0.1092605 0.1092567 0.1092530 0.1092494 0.1092458 0.1092423 #> [190] 0.1092390 0.1092357 0.1092327 0.1092297 0.1092269 0.1092243 0.1092217 #> [197] 0.1092192 0.1092168 0.1092145 0.1092122 0.1092100 0.1092079 0.1092058 #> [204] 0.1092037 0.1092017 0.1091997 0.1091977 0.1091958 0.1091939 0.1091920 #> [211] 0.1091902 0.1091884 0.1091867 0.1091849 0.1091832 0.1091816 0.1091799 #> [218] 0.1091783 0.1091767 0.1091751 0.1091736 0.1091721 0.1091706 0.1091691 #> [225] 0.1091676 0.1091661 0.1091647 0.1091633 0.1091619 0.1091606 0.1091593 #> [232] 0.1091580 0.1091567 0.1091555 0.1091543 0.1091532 0.1091521 0.1091510 #> [239] 0.1091500 0.1091490 0.1091480 #>  #> $bisil #> [1] 0.1954041 #>  #> $row_clusters #> $row_clusters[[1]] #>        [,1] [,2] [,3] #>   [1,]    0    1    0 #>   [2,]    0    0    0 #>   [3,]    0    0    0 #>   [4,]    1    0    1 #>   [5,]    1    0    0 #>   [6,]    1    0    0 #>   [7,]    1    1    0 #>   [8,]    1    1    1 #>   [9,]    1    1    0 #>  [10,]    1    0    1 #>  [11,]    0    0    1 #>  [12,]    1    0    1 #>  [13,]    1    0    0 #>  [14,]    1    0    1 #>  [15,]    0    0    1 #>  [16,]    1    0    1 #>  [17,]    1    0    1 #>  [18,]    1    1    0 #>  [19,]    1    0    0 #>  [20,]    1    1    0 #>  [21,]    0    1    0 #>  [22,]    1    0    1 #>  [23,]    1    1    1 #>  [24,]    0    1    1 #>  [25,]    0    0    0 #>  [26,]    1    1    1 #>  [27,]    0    1    1 #>  [28,]    0    1    1 #>  [29,]    0    0    1 #>  [30,]    1    0    0 #>  [31,]    1    0    1 #>  [32,]    1    1    0 #>  [33,]    1    0    0 #>  [34,]    1    0    1 #>  [35,]    1    1    0 #>  [36,]    0    1    0 #>  [37,]    0    0    1 #>  [38,]    1    0    1 #>  [39,]    0    1    1 #>  [40,]    1    0    0 #>  [41,]    1    1    0 #>  [42,]    0    1    0 #>  [43,]    1    0    1 #>  [44,]    0    1    1 #>  [45,]    1    1    1 #>  [46,]    0    1    1 #>  [47,]    1    1    1 #>  [48,]    1    0    0 #>  [49,]    1    0    1 #>  [50,]    0    0    0 #>  [51,]    1    0    1 #>  [52,]    0    1    1 #>  [53,]    0    0    0 #>  [54,]    0    1    1 #>  [55,]    1    0    0 #>  [56,]    0    1    0 #>  [57,]    0    0    1 #>  [58,]    1    0    0 #>  [59,]    1    1    0 #>  [60,]    1    0    1 #>  [61,]    1    1    1 #>  [62,]    1    0    1 #>  [63,]    1    1    1 #>  [64,]    1    0    1 #>  [65,]    1    1    0 #>  [66,]    0    1    0 #>  [67,]    0    1    0 #>  [68,]    1    0    1 #>  [69,]    1    0    1 #>  [70,]    0    0    1 #>  [71,]    0    0    1 #>  [72,]    1    0    1 #>  [73,]    0    0    0 #>  [74,]    1    0    1 #>  [75,]    1    0    1 #>  [76,]    0    1    0 #>  [77,]    0    1    1 #>  [78,]    1    0    1 #>  [79,]    1    1    0 #>  [80,]    0    1    1 #>  [81,]    1    0    0 #>  [82,]    0    0    0 #>  [83,]    1    0    1 #>  [84,]    0    1    0 #>  [85,]    0    0    1 #>  [86,]    0    0    1 #>  [87,]    1    1    1 #>  [88,]    0    0    1 #>  [89,]    1    1    1 #>  [90,]    0    0    1 #>  [91,]    0    1    0 #>  [92,]    1    1    0 #>  [93,]    1    1    1 #>  [94,]    0    0    0 #>  [95,]    1    1    0 #>  [96,]    1    1    0 #>  [97,]    0    0    1 #>  [98,]    1    0    0 #>  [99,]    0    1    1 #> [100,]    1    1    0 #>  #> $row_clusters[[2]] #>        [,1] [,2] [,3] #>   [1,]    0    1    0 #>   [2,]    0    0    0 #>   [3,]    0    0    0 #>   [4,]    1    0    1 #>   [5,]    1    0    0 #>   [6,]    1    0    0 #>   [7,]    1    1    0 #>   [8,]    1    1    1 #>   [9,]    1    1    0 #>  [10,]    1    0    1 #>  [11,]    0    0    0 #>  [12,]    1    0    1 #>  [13,]    1    0    0 #>  [14,]    1    0    1 #>  [15,]    0    0    1 #>  [16,]    1    0    1 #>  [17,]    1    0    1 #>  [18,]    1    1    1 #>  [19,]    1    0    0 #>  [20,]    1    1    0 #>  [21,]    0    1    0 #>  [22,]    1    0    1 #>  [23,]    1    1    1 #>  [24,]    0    1    1 #>  [25,]    0    0    0 #>  [26,]    1    1    1 #>  [27,]    0    1    1 #>  [28,]    0    1    1 #>  [29,]    0    0    1 #>  [30,]    1    0    0 #>  [31,]    1    0    1 #>  [32,]    1    1    0 #>  [33,]    1    0    0 #>  [34,]    1    0    1 #>  [35,]    1    1    1 #>  [36,]    0    1    0 #>  [37,]    0    0    1 #>  [38,]    1    0    1 #>  [39,]    0    1    1 #>  [40,]    1    0    0 #>  [41,]    1    1    1 #>  [42,]    0    1    0 #>  [43,]    1    0    1 #>  [44,]    0    1    1 #>  [45,]    1    1    1 #>  [46,]    0    1    1 #>  [47,]    1    1    1 #>  [48,]    1    0    0 #>  [49,]    1    0    1 #>  [50,]    0    0    1 #>  [51,]    1    0    1 #>  [52,]    0    1    1 #>  [53,]    0    0    0 #>  [54,]    0    1    1 #>  [55,]    1    0    0 #>  [56,]    0    1    0 #>  [57,]    0    0    1 #>  [58,]    1    0    0 #>  [59,]    1    1    0 #>  [60,]    1    0    1 #>  [61,]    1    1    1 #>  [62,]    1    0    1 #>  [63,]    1    1    1 #>  [64,]    1    0    1 #>  [65,]    1    1    0 #>  [66,]    0    1    0 #>  [67,]    0    1    0 #>  [68,]    1    0    1 #>  [69,]    1    0    1 #>  [70,]    0    0    1 #>  [71,]    0    0    0 #>  [72,]    1    0    1 #>  [73,]    0    0    0 #>  [74,]    1    0    1 #>  [75,]    1    0    1 #>  [76,]    0    1    0 #>  [77,]    0    1    1 #>  [78,]    1    0    1 #>  [79,]    1    1    0 #>  [80,]    0    1    1 #>  [81,]    1    0    0 #>  [82,]    0    0    0 #>  [83,]    1    0    1 #>  [84,]    0    1    0 #>  [85,]    0    0    1 #>  [86,]    0    0    1 #>  [87,]    1    1    1 #>  [88,]    0    0    1 #>  [89,]    1    1    1 #>  [90,]    0    0    0 #>  [91,]    0    1    0 #>  [92,]    1    1    0 #>  [93,]    1    1    0 #>  [94,]    0    0    0 #>  [95,]    1    1    0 #>  [96,]    1    1    0 #>  [97,]    0    0    1 #>  [98,]    1    0    0 #>  [99,]    0    1    1 #> [100,]    1    1    0 #>  #>  #> $col_clusters #> $col_clusters[[1]] #>       [,1] [,2] [,3] #>  [1,]    0    0    1 #>  [2,]    0    1    0 #>  [3,]    0    0    1 #>  [4,]    1    0    0 #>  [5,]    0    0    1 #>  [6,]    0    0    1 #>  [7,]    1    1    0 #>  [8,]    1    0    0 #>  [9,]    0    1    0 #> [10,]    0    1    1 #> [11,]    0    0    1 #> [12,]    1    1    0 #> [13,]    0    0    1 #> [14,]    0    0    1 #> [15,]    1    1    0 #> [16,]    1    0    0 #> [17,]    0    1    1 #> [18,]    1    0    1 #> [19,]    1    0    0 #> [20,]    0    1    0 #> [21,]    0    1    0 #> [22,]    1    1    0 #> [23,]    1    0    1 #> [24,]    0    0    1 #> [25,]    1    1    0 #> [26,]    0    1    1 #> [27,]    1    0    1 #> [28,]    0    1    0 #> [29,]    1    0    0 #> [30,]    1    0    0 #> [31,]    0    0    1 #> [32,]    0    1    1 #> [33,]    0    1    1 #> [34,]    1    0    1 #> [35,]    0    0    1 #> [36,]    1    1    1 #> [37,]    0    1    1 #> [38,]    0    1    1 #> [39,]    0    0    1 #> [40,]    1    0    1 #> [41,]    1    0    0 #> [42,]    1    0    0 #> [43,]    1    1    0 #> [44,]    0    0    1 #> [45,]    1    1    0 #> [46,]    1    0    1 #> [47,]    1    1    0 #> [48,]    0    0    1 #> [49,]    0    1    1 #> [50,]    1    1    0 #>  #> $col_clusters[[2]] #>       [,1] [,2] [,3] #>  [1,]    0    0    1 #>  [2,]    0    1    0 #>  [3,]    0    0    1 #>  [4,]    1    0    0 #>  [5,]    0    0    1 #>  [6,]    0    0    1 #>  [7,]    1    1    0 #>  [8,]    1    0    0 #>  [9,]    0    1    0 #> [10,]    0    1    1 #> [11,]    0    0    1 #> [12,]    1    1    0 #> [13,]    0    0    1 #> [14,]    0    0    1 #> [15,]    1    1    0 #> [16,]    1    0    0 #> [17,]    1    1    1 #> [18,]    1    0    1 #> [19,]    1    0    0 #> [20,]    0    1    0 #> [21,]    0    1    0 #> [22,]    1    1    0 #> [23,]    1    0    1 #> [24,]    0    0    1 #> [25,]    1    1    0 #> [26,]    0    1    1 #> [27,]    1    0    1 #> [28,]    0    1    0 #> [29,]    1    0    0 #> [30,]    1    0    0 #> [31,]    0    0    1 #> [32,]    0    1    1 #> [33,]    0    1    1 #> [34,]    1    0    1 #> [35,]    0    0    1 #> [36,]    1    1    1 #> [37,]    1    1    1 #> [38,]    0    1    1 #> [39,]    0    0    1 #> [40,]    0    0    1 #> [41,]    1    0    0 #> [42,]    1    0    0 #> [43,]    1    1    0 #> [44,]    0    0    1 #> [45,]    1    1    0 #> [46,]    1    0    1 #> [47,]    1    1    0 #> [48,]    0    0    1 #> [49,]    0    1    1 #> [50,]    1    1    0 #>  #>  #> $lambda #> $lambda[[1]] #> [1] 1.941881e-151 3.393072e-172 3.584933e-170 #>  #> $lambda[[2]] #> [1] 1.183691e-140 1.922585e-176 1.895918e-186 #>  #>  #> $mu #> $mu[[1]] #> [1] 2.216647e-133 1.509655e-173 1.113503e-174 #>  #> $mu[[2]] #> [1] 2.891488e-132 4.204643e-175 8.811417e-151 #>  #>"},{"path":"https://eso28599.github.io/resnmtf/reference/res_nmtf_inner.html","id":null,"dir":"Reference","previous_headings":"","what":"ResNMTF inner functiion — res_nmtf_inner","title":"ResNMTF inner functiion — res_nmtf_inner","text":"Apply ResNMTF data, without stability analysis specific number biclusters","code":""},{"path":"https://eso28599.github.io/resnmtf/reference/res_nmtf_inner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ResNMTF inner functiion — res_nmtf_inner","text":"","code":"res_nmtf_inner(   data,   init_f = NULL,   init_s = NULL,   init_g = NULL,   k_vec = NULL,   phi = NULL,   xi = NULL,   psi = NULL,   n_iters = NULL,   num_repeats = 5,   distance = \"euclidean\",   no_clusts = FALSE )"},{"path":"https://eso28599.github.io/resnmtf/reference/res_nmtf_inner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ResNMTF inner functiion — res_nmtf_inner","text":"data list matrices, data factorised init_f list matrices, initialisation F matrices init_s list matrices, initialisation S matrices init_g list matrices, initialisation G matrices k_vec integer, vector integers, number clusters consider phi list matrices, default NULL, restriction matrices F xi list matrices, default NULL, restriction matrices S psi list matrices, default NULL, restriction matrices G n_iters integer, default NULL, number iterations run num_repeats integer, default 5, minimum value 2 number num_repeats use ?? distance string, default \"euclidean\", distance metric use within bisilhouette score no_clusts boolean, default FALSE, whether return factorisation rather biclustering","code":""},{"path":"https://eso28599.github.io/resnmtf/reference/res_nmtf_inner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ResNMTF inner functiion — res_nmtf_inner","text":"list results ResNMTF","code":""}]
